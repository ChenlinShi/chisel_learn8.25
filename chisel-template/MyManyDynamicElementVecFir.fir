circuit MyManyDynamicElementVecFir :
  module MyManyDynamicElementVecFir :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip in : UInt<8>, out : UInt<8>, flip consts : UInt<8>[6]}

    wire _regs_WIRE : UInt<8>[5] @[firwithREGFILE.scala 16:28]
    _regs_WIRE[0] <= UInt<8>("h0") @[firwithREGFILE.scala 16:28]
    _regs_WIRE[1] <= UInt<8>("h0") @[firwithREGFILE.scala 16:28]
    _regs_WIRE[2] <= UInt<8>("h0") @[firwithREGFILE.scala 16:28]
    _regs_WIRE[3] <= UInt<8>("h0") @[firwithREGFILE.scala 16:28]
    _regs_WIRE[4] <= UInt<8>("h0") @[firwithREGFILE.scala 16:28]
    reg regs : UInt<8>[5], clock with :
      reset => (reset, _regs_WIRE) @[firwithREGFILE.scala 16:20]
    regs[0] <= io.in @[firwithREGFILE.scala 18:26]
    regs[1] <= regs[0] @[firwithREGFILE.scala 19:26]
    regs[2] <= regs[1] @[firwithREGFILE.scala 19:26]
    regs[3] <= regs[2] @[firwithREGFILE.scala 19:26]
    regs[4] <= regs[3] @[firwithREGFILE.scala 19:26]
    wire muls : UInt<8>[6] @[firwithREGFILE.scala 22:18]
    node _muls_0_T = mul(io.in, io.consts[0]) @[firwithREGFILE.scala 24:35]
    muls[0] <= _muls_0_T @[firwithREGFILE.scala 24:26]
    node _muls_1_T = mul(regs[0], io.consts[1]) @[firwithREGFILE.scala 25:41]
    muls[1] <= _muls_1_T @[firwithREGFILE.scala 25:26]
    node _muls_2_T = mul(regs[1], io.consts[2]) @[firwithREGFILE.scala 25:41]
    muls[2] <= _muls_2_T @[firwithREGFILE.scala 25:26]
    node _muls_3_T = mul(regs[2], io.consts[3]) @[firwithREGFILE.scala 25:41]
    muls[3] <= _muls_3_T @[firwithREGFILE.scala 25:26]
    node _muls_4_T = mul(regs[3], io.consts[4]) @[firwithREGFILE.scala 25:41]
    muls[4] <= _muls_4_T @[firwithREGFILE.scala 25:26]
    node _muls_5_T = mul(regs[4], io.consts[5]) @[firwithREGFILE.scala 25:41]
    muls[5] <= _muls_5_T @[firwithREGFILE.scala 25:26]
    wire scan : UInt<8>[6] @[firwithREGFILE.scala 28:18]
    scan[0] <= muls[0] @[firwithREGFILE.scala 30:26]
    node _scan_1_T = add(muls[1], scan[0]) @[firwithREGFILE.scala 31:31]
    node _scan_1_T_1 = tail(_scan_1_T, 1) @[firwithREGFILE.scala 31:31]
    scan[1] <= _scan_1_T_1 @[firwithREGFILE.scala 31:20]
    node _scan_2_T = add(muls[2], scan[1]) @[firwithREGFILE.scala 31:31]
    node _scan_2_T_1 = tail(_scan_2_T, 1) @[firwithREGFILE.scala 31:31]
    scan[2] <= _scan_2_T_1 @[firwithREGFILE.scala 31:20]
    node _scan_3_T = add(muls[3], scan[2]) @[firwithREGFILE.scala 31:31]
    node _scan_3_T_1 = tail(_scan_3_T, 1) @[firwithREGFILE.scala 31:31]
    scan[3] <= _scan_3_T_1 @[firwithREGFILE.scala 31:20]
    node _scan_4_T = add(muls[4], scan[3]) @[firwithREGFILE.scala 31:31]
    node _scan_4_T_1 = tail(_scan_4_T, 1) @[firwithREGFILE.scala 31:31]
    scan[4] <= _scan_4_T_1 @[firwithREGFILE.scala 31:20]
    node _scan_5_T = add(muls[5], scan[4]) @[firwithREGFILE.scala 31:31]
    node _scan_5_T_1 = tail(_scan_5_T, 1) @[firwithREGFILE.scala 31:31]
    scan[5] <= _scan_5_T_1 @[firwithREGFILE.scala 31:20]
    io.out <= scan[5] @[firwithREGFILE.scala 34:10]

